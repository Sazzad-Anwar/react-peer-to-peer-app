{"version":3,"sources":["SocketContext.js","Components/VideoPlayer.jsx","Components/Notifications.jsx","Components/Options.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","console","log","current","srcObject","catch","error","on","id","from","callerName","signal","isReceivingCall","Provider","value","callUser","peer","Peer","initiator","trickle","config","iceServers","data","emit","userToCall","signalData","leaveCall","disconnect","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","Notifications","style","display","Button","color","onClick","root","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","vlaue","onChange","e","target","fullWidth","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16556f90.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n\r\n    const [stream, setStream] = useState(null);\r\n    const [me, setMe] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState('');\r\n\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n            .then((currentStream) => {\r\n                setStream(currentStream);\r\n                console.log(currentStream);\r\n                myVideo.current.srcObject = currentStream;\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        socket.on('me', (id) => setMe(id));\r\n\r\n        socket.on('calluser', ({ from, name: callerName, signal }) => {\r\n            setCall({\r\n                isReceivingCall: true,\r\n                from,\r\n                name: callerName, signal\r\n            });\r\n        })\r\n\r\n    }, []);\r\n\r\n    const answerCall = () => {\r\n\r\n        setCallAccepted(true);\r\n\r\n        const peer = new Peer({\r\n            initiator: false,\r\n            trickle: false,\r\n            stream,\r\n            iceServers: [\r\n                {\r\n                    \"urls\": [\"stun:stun.royex.io\"]\r\n                },\r\n                {\r\n                    \"urls\": [\"turn:turn.royex.io:3478?transport=udp\",\r\n                        \"turn:turn.royex.io:5349?transport=tcp\"\r\n                    ],\r\n                    \"username\": \"royex\",\r\n                    \"credential\": \"12345\"\r\n                }\r\n            ]\r\n        });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answercall', ({ signal: data, to: call.from }))\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n    const callUser = (id) => {\r\n\r\n        const peer = new Peer({\r\n            initiator: true,\r\n            trickle: false,\r\n            stream,\r\n            config: {\r\n                iceServers: [\r\n                    {\r\n                        \"urls\": [\"stun:stun.royex.io\"]\r\n                    },\r\n                    {\r\n                        \"urls\": [\"turn:turn.royex.io:3478?transport=udp\",\r\n                            \"turn:turn.royex.io:5349?transport=tcp\"\r\n                        ],\r\n                        \"username\": \"royex\",\r\n                        \"credential\": \"12345\"\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('calluser', ({ userToCall: id, signalData: data, from: me, name }))\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callaccepted', (signal) => {\r\n            setCallAccepted(true);\r\n            peer.signal(signal);\r\n        });\r\n\r\n    }\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n        console.log(connectionRef);\r\n        Peer.disconnect()\r\n\r\n        // window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call,\r\n            callAccepted,\r\n            myVideo,\r\n            userVideo,\r\n            stream,\r\n            name,\r\n            setName,\r\n            callEnded,\r\n            me,\r\n            callUser,\r\n            leaveCall,\r\n            answerCall\r\n        }}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport { ContextProvider, SocketContext }","import { Grid, Typography, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useContext } from 'react';\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    video: {\r\n        width: '550px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '300px',\r\n        },\r\n    },\r\n    gridContainer: {\r\n        justifyContent: 'center',\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    paper: {\r\n        padding: '10px',\r\n        border: '2px solid black',\r\n        margin: '10px',\r\n    },\r\n}));\r\n\r\nconst VideoPlayer = () => {\r\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.gridContainer}>\r\n            {/* our own video */}\r\n            {\r\n                stream && (\r\n                    <Paper className={classes.paper}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {name || 'Name'}\r\n                            </Typography>\r\n                            <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\r\n                        </Grid>\r\n                    </Paper>\r\n                )\r\n            }\r\n\r\n            {/* user's video */}\r\n            { callAccepted && !callEnded && (\r\n                <Paper className={classes.paper}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            {call.name || 'Name'}\r\n                        </Typography>\r\n                        <video playsInline muted ref={userVideo} autoPlay className={classes.video} />\r\n                    </Grid>\r\n                </Paper>\r\n            )}\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer;\r\n","import { Button } from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { SocketContext } from \"../SocketContext\";\r\n\r\nconst Notifications = () => {\r\n\r\n    const { answerCall, call, callAccepted } = useContext(SocketContext);\r\n\r\n    return (\r\n        <>\r\n            {call.isReceivingCall && !callAccepted && (\r\n                <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center'\r\n                }}>\r\n                    <h1>{call.name} is calling</h1>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={answerCall}\r\n                    >\r\n                        Answer\r\n                    </Button>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notifications;\r\n","import { Button, Container, Grid, Paper, TextField, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\r\nimport { SocketContext } from '../SocketContext';\r\nimport { useContext, useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    gridContainer: {\r\n        width: '100%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    container: {\r\n        width: '600px',\r\n        margin: '35px 0',\r\n        padding: 0,\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '80%',\r\n        },\r\n    },\r\n    margin: {\r\n        marginTop: 20,\r\n    },\r\n    padding: {\r\n        padding: 20,\r\n    },\r\n    paper: {\r\n        padding: '10px 20px',\r\n        border: '2px solid black',\r\n    },\r\n}));\r\n\r\nconst Options = ({ children }) => {\r\n\r\n    const { me, callAccepted, name, setName, leaveCall, callUser, callEnded } = useContext(SocketContext);\r\n    const [idToCall, setIdToCall] = useState('');\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Paper elevation={10} className={classes.paper}>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <Grid container className={classes.gridContainer}>\r\n                        <Grid item xs={12} md={6} className={classes.padding}>\r\n                            <Typography gutterBottom variant=\"h6\">\r\n                                Account info\r\n                            </Typography>\r\n                            <TextField\r\n                                label=\"Name\"\r\n                                vlaue={name}\r\n                                onChange={e => setName(e.target.value)}\r\n                                fullWidth\r\n                            />\r\n                            <CopyToClipboard text={me} className={classes.margin}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    fullWidth\r\n                                    startIcon={<Assignment fontSize=\"large\" />}\r\n                                >\r\n                                    Copy Your ID\r\n                                </Button>\r\n                            </CopyToClipboard>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6} className={classes.padding}>\r\n                            <Typography gutterBottom variant=\"h6\">\r\n                                Account info\r\n                            </Typography>\r\n                            <TextField\r\n                                label=\"ID to Call\"\r\n                                vlaue={idToCall}\r\n                                onChange={e => setIdToCall(e.target.value)}\r\n                                fullWidth\r\n                            />\r\n                            {callAccepted && !callEnded ? (\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    startIcon={\r\n                                        <PhoneDisabled fontSize=\"large\" />\r\n                                    }\r\n                                    onClick={leaveCall}\r\n                                    fullWidth\r\n                                    className={classes.margin}\r\n                                >\r\n                                    Hang Up\r\n                                </Button>\r\n                            ) : (\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    startIcon={\r\n                                        <Phone fontSize=\"large\" />\r\n                                    }\r\n                                    onClick={() => callUser(idToCall)}\r\n                                    fullWidth\r\n                                    className={classes.margin}\r\n                                >\r\n                                    Call\r\n                                </Button>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </form>\r\n                {children}\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Options;\r\n","import React from 'react';\r\nimport { Typography, AppBar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport VideoPlayer from './Components/VideoPlayer';\r\nimport Notifications from './Components/Notifications';\r\nimport Options from './Components/Options';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        borderRadius: 15,\r\n        margin: '30px 100px',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '600px',\r\n        border: '2px solid black',\r\n\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '90%',\r\n        },\r\n    },\r\n    image: {\r\n        marginLeft: '15px',\r\n    },\r\n    wrapper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nconst App = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n                <Typography variant=\"h3\" align=\"center\">Video Chat</Typography>\r\n            </AppBar>\r\n            <VideoPlayer />\r\n            <Options>\r\n                <Notifications />\r\n            </Options>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { ContextProvider } from './SocketContext';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <App />\r\n    </ContextProvider>\r\n    ,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}